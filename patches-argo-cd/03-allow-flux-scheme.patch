allow flux scheme

From: Chanwit Kaewkasi <chanwit@gmail.com>

Signed-off-by: Chanwit Kaewkasi <chanwit@gmail.com>
---
 reposerver/repository/repository.go |    5 +++++
 server/application/application.go   |    4 ++++
 util/argo/argo.go                   |    5 +++++
 3 files changed, 14 insertions(+)

diff --git a/reposerver/repository/repository.go b/reposerver/repository/repository.go
index 963dbf269..bdae3e921 100644
--- a/reposerver/repository/repository.go
+++ b/reposerver/repository/repository.go
@@ -1762,6 +1762,11 @@ func (s *Service) TestRepository(ctx context.Context, q *apiclient.TestRepositor
 	}
 	check := checks[repo.Type]
 	apiResp := &apiclient.TestRepositoryResponse{VerifiedRepository: false}
+
+	// Flux scheme is a special case
+	if strings.HasPrefix(repo.Repo, "flux://") {
+		return apiResp, nil
+	}
 	err := check()
 	if err != nil {
 		return apiResp, fmt.Errorf("error testing repository connectivity: %w", err)
diff --git a/server/application/application.go b/server/application/application.go
index 5a56ee8a2..c936eac20 100644
--- a/server/application/application.go
+++ b/server/application/application.go
@@ -1536,6 +1536,10 @@ func (s *Server) resolveRevision(ctx context.Context, app *appv1.Application, sy
 			// If it's already a commit SHA, then no need to look it up
 			return ambiguousRevision, ambiguousRevision, nil
 		}
+		if strings.HasPrefix(app.Spec.Source.RepoURL, "flux://") {
+			// Flux scheme is a special case
+			return ambiguousRevision, ambiguousRevision, nil
+		}
 		repo, err := s.db.GetRepository(ctx, app.Spec.Source.RepoURL)
 		if err != nil {
 			return "", "", err
diff --git a/util/argo/argo.go b/util/argo/argo.go
index 8d2a886a1..33626b9bf 100644
--- a/util/argo/argo.go
+++ b/util/argo/argo.go
@@ -188,6 +188,11 @@ func ValidateRepo(
 	spec := &app.Spec
 	conditions := make([]argoappv1.ApplicationCondition, 0)
 
+	// Flux scheme is a special case
+	if strings.HasPrefix(spec.Source.RepoURL, "flux://") {
+		return conditions, nil
+	}
+
 	// Test the repo
 	conn, repoClient, err := repoClientset.NewRepoServerClient()
 	if err != nil {
